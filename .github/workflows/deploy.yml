name: Deploy OpenVPN

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy files to server
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete
          path: ./*
          remote_path: /opt/openvpn/
          remote_host: ${{ secrets.SERVER_HOST }}
          remote_user: ${{ secrets.SERVER_USER }}
          remote_key: ${{ secrets.AZURE_SSH_KEY }}

      - name: Run deployment
        uses: appleboy/ssh-action@v1.0.0
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          envs: DOCKER_USERNAME,DOCKER_PASSWORD,DOCKER_TOKEN,GH_TOKEN
          script: |
            cd /opt/openvpn
            chmod +x *.sh
            
            # Create .env file
            cat > .env << EOF
            DOCKER_USERNAME=${DOCKER_USERNAME}
            DOCKER_PASSWORD=${DOCKER_PASSWORD}
            DOCKER_TOKEN=${DOCKER_TOKEN}
            GH_TOKEN=${GH_TOKEN}
            EOF
            
            # Run deployment
            ./deploy.sh

  test:
    needs: deploy
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Test OpenVPN connection
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          script: |
            cd /opt/openvpn && ./test_ports.sh
