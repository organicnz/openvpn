name: Deploy OpenVPN

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          sudo rm -rf ~/.ssh
          sudo mkdir -p ~/.ssh
          echo "${{ secrets.AZURE_SSH_KEY }}" | sudo tee ~/.ssh/id_rsa > /dev/null
          sudo chmod 600 ~/.ssh/id_rsa
          sudo chown -R $(whoami):$(whoami) ~/.ssh
          ssh-keyscan -t rsa -H "${{ secrets.SERVER_HOST }}" | sudo tee -a ~/.ssh/known_hosts > /dev/null
          sudo chmod 644 ~/.ssh/known_hosts

      - name: Deploy to server
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # Create deployment script
          cat > deploy_remote.sh << 'EOL'
          #!/bin/bash
          set -e
          echo "Starting deployment..."
          
          # Ensure target directory exists
          sudo mkdir -p /opt/openvpn
          sudo chown -R $(whoami):$(whoami) /opt/openvpn
          cd /opt/openvpn
          
          # Clean up old files except volumes
          sudo find . -mindepth 1 -maxdepth 1 ! -name 'openvpn_data' -exec rm -rf {} +
          
          # Create .env file
          cat > .env << EOF
          DOCKER_USERNAME=$DOCKER_USERNAME
          DOCKER_PASSWORD=$DOCKER_PASSWORD
          DOCKER_TOKEN=$DOCKER_TOKEN
          GH_TOKEN=$GH_TOKEN
          EOF
          
          # Run deployment with sudo
          sudo ./deploy.sh
          EOL
          
          # Copy files to server
          scp -o StrictHostKeyChecking=no -r ./* $SERVER_USER@$SERVER_HOST:/opt/openvpn/
          scp -o StrictHostKeyChecking=no deploy_remote.sh $SERVER_USER@$SERVER_HOST:/opt/openvpn/
          
          # Execute deployment
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "cd /opt/openvpn && sudo chmod +x *.sh && DOCKER_USERNAME='$DOCKER_USERNAME' DOCKER_PASSWORD='$DOCKER_PASSWORD' DOCKER_TOKEN='$DOCKER_TOKEN' GH_TOKEN='$GH_TOKEN' sudo -E ./deploy_remote.sh"

  test:
    needs: deploy
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Setup SSH
        run: |
          sudo rm -rf ~/.ssh
          sudo mkdir -p ~/.ssh
          echo "${{ secrets.AZURE_SSH_KEY }}" | sudo tee ~/.ssh/id_rsa > /dev/null
          sudo chmod 600 ~/.ssh/id_rsa
          sudo chown -R $(whoami):$(whoami) ~/.ssh
          ssh-keyscan -t rsa -H "${{ secrets.SERVER_HOST }}" | sudo tee -a ~/.ssh/known_hosts > /dev/null
          sudo chmod 644 ~/.ssh/known_hosts

      - name: Test OpenVPN connection
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "cd /opt/openvpn && sudo ./test_ports.sh"
