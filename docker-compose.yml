# Deploy OpenVPN server using Docker
version: '3.8'

# Define common configurations as YAML anchors
x-logging: &default-logging
  logging:
    driver: json-file
    options:
      max-size: 10m
      max-file: 3

x-restart-policy: &default-restart
  restart: unless-stopped

# Combined default configuration
x-defaults: &defaults
  <<: *default-logging
  <<: *default-restart

services:
  # Main OpenVPN service
  openvpn:
    <<: *defaults
    image: kylemanna/openvpn:latest
    container_name: openvpn-server
    cap_add:
      - NET_ADMIN
    sysctls:
      net.ipv6.conf.all.forwarding: 1
      net.ipv6.conf.default.forwarding: 1
    ports:
      - 1194:1194/udp
      - 1195:1194/tcp  # Use port 1195 for TCP to avoid conflicts
      - 3005-3009:3005-3009/tcp  # Port forwarding range
    volumes:
      - ./openvpn_data:/etc/openvpn
      - ./client_configs:/etc/openvpn/clients:ro
    environment:
      # EasyRSA settings
      EASYRSA_BATCH: 1
      EASYRSA_REQ_CN: OpenVPN CA
      # OpenVPN core settings
      OVPN_SERVER: 10.20.0.0/24
      OVPN_DNS: 8.8.8.8,8.8.4.4
      OVPN_CLIENT_TO_CLIENT: 1
      OVPN_DUPLICATE_CN: 1
      DEBUG: 1
    # Startup script with fixed syntax for YAML compatibility
    command: >
      bash -c '
      # Error handling
      set -e
      trap "echo \"Error occurred! Exiting...\"; exit 1" ERR

      # Environment file creation
      if [ ! -f /etc/openvpn/ovpn_env.sh ]; then
        echo "Creating environment file..."
        echo "export OVPN_AUTH=" > /etc/openvpn/ovpn_env.sh
        echo "export OVPN_CIPHER=AES-256-GCM" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_CLIENT_TO_CLIENT=1" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_CN=${HOSTNAME}" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_COMP_LZO=0" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_DEFROUTE=1" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_DEVICE=tun" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_DEVICEN=0" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_DISABLE_PUSH_BLOCK_DNS=0" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_DNS=1" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_DNS_SERVERS=(\"8.8.8.8\" \"8.8.4.4\")" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_ENV=/etc/openvpn/ovpn_env.sh" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_EXTRA_CLIENT_CONFIG=()" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_EXTRA_SERVER_CONFIG=()" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_FRAGMENT=" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_MTU=" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_NAT=1" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_OTP_AUTH=" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_PORT=1194" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_PROTO=both" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_PUSH=()" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_ROUTES=([0]=\"10.20.0.0/24\")" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_SERVER=10.20.0.0/24" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_SERVER_URL=udp://${HOSTNAME}:1194" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_SERVER_URL_TCP=tcp://${HOSTNAME}:1195" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_TLS_CIPHER=TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_TLS_VERSION_MIN=1.2" >> /etc/openvpn/ovpn_env.sh
        echo "export OVPN_DUPLICATE_CN=1" >> /etc/openvpn/ovpn_env.sh
        chmod 644 /etc/openvpn/ovpn_env.sh
        echo "Environment file created successfully"
      else
        echo "Using existing environment file"
      fi

      # Create required directories
      mkdir -p /etc/openvpn/ccd

      # Start OpenVPN
      echo "Starting OpenVPN server..."
      exec openvpn --config /etc/openvpn/openvpn.conf --client-config-dir /etc/openvpn/ccd
      '
    healthcheck:
      test: ["CMD-SHELL", "pgrep openvpn || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      openvpn_net:
        ipv4_address: 10.20.0.2

  # Simple Admin Panel for OpenVPN
  openvpn-admin:
    <<: *defaults
    image: kylemanna/openvpn:2.4
    container_name: openvpn-admin-panel
    depends_on:
      - openvpn
    ports:
      - 8080:80
    volumes:
      - ./openvpn_data:/etc/openvpn:ro
    environment:
      OPENVPN_ADMIN_USERNAME: ${OPENVPN_ADMIN_USERNAME:-admin}
      OPENVPN_ADMIN_PASSWORD: ${OPENVPN_ADMIN_PASSWORD:-admin}
    command: ["sh", "-c", "echo 'Running simple admin interface' && sleep infinity"]
    networks:
      openvpn_net:
        ipv4_address: 10.20.0.3

  # Status Page for OpenVPN
  openvpn-status:
    <<: *defaults
    image: auspexeu/openvpn-status:latest
    container_name: openvpn-status-page
    depends_on:
      - openvpn
    ports:
      - 8081:80
    environment:
      OPENVPN_STATUS_LOG: /var/log/openvpn/status.log
      OPENVPN_MANAGEMENT_HOST: openvpn-server
      OPENVPN_MANAGEMENT_PORT: 7505
    networks:
      openvpn_net:
        ipv4_address: 10.20.0.4

networks:
  openvpn_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.20.0.0/16
          gateway: 10.20.0.1

volumes:
  openvpn_data:
    driver: local
