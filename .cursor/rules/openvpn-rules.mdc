---
description: OpenVPN Configuration and Deployment Rules
globs: ["docker-compose.yml", ".env*", "client_configs/*", ".github/workflows/*"]
alwaysApply: false
---

# OpenVPN Stack Rules

## General Guidelines

- Always use secure cipher suites (AES-256-GCM) and TLS 1.2+ for connections
- Never commit secrets or credentials to the repository - use GitHub Secrets instead
- All environment variables should be defined in GitHub Secrets and propagated to the `.env` file
- All code changes must be reviewed before merging to main branch
- Follow the principle of least privilege for all configurations

## CI/CD Workflow Structure

- All deployment operations are managed through the GitHub Actions workflow (deploy.yml)
- The workflow is structured in sequential jobs with dependencies between them
- The workflow should be triggered either by push to main or manually via workflow_dispatch
- Failed jobs should provide clear error messages for troubleshooting
- Required environment variables must be verified before deployment

## Workflow Jobs

1. **verify-env**: Validates all required environment variables and files
2. **deploy**: Sets up SSH, cleans the environment, copies files, and starts services
3. **test**: Verifies container status, port availability, and proper initialization
4. **monitor**: Configures system monitoring via cron jobs
5. **client-management**: Provides tools for managing OpenVPN client certificates

## Docker Configuration

- Use specific image version tags (e.g., kylemanna/openvpn:2.4), never use `latest`
- Set container restart policy to `unless-stopped` in docker-compose.yml
- Define network with fixed subnet (10.8.0.0/16) and appropriate gateway
- Configure proper volume mapping for persistent data
- Set resource limits to prevent container from consuming excessive resources

## Security Requirements

- OpenVPN must use AES-256-GCM encryption and TLS 1.2+ protocol
- Client certificates should be rotated at least every 90 days
- Admin panel access should be restricted to authorized networks 
- Admin credentials must be secure and changed from defaults
- Implement connection logging and monitor for unauthorized access attempts
- Disable compression in production environments unless absolutely necessary
- Keep all containers updated with security patches
- Port forwarding should be restricted to only necessary ports (3005-3009)

## Monitoring and Maintenance

- Automated monitoring checks run every 10 minutes via cron job
- Self-healing mechanisms restart the container if it becomes unhealthy
- Log rotation is configured to prevent disk space issues
- All maintenance operations should be performed through the GitHub workflow
- Server logs are stored in the /var/log/openvpn directory

## Admin Interfaces

- Two admin interfaces are available: openvpn-admin (port 8080) and openvpn-status (port 8081)
- Admin interfaces should not be exposed to the public internet without proper security
- Admin credentials must be stored in environment variables
- Default admin credentials must never be used in production
- The admin interfaces simplify certificate management and monitoring

## Client Certificate Management

- Client certificates are managed through the web admin panel or the client-management job
- To create new client certificates, use the admin panel or manually trigger the workflow
- Client configuration files should be securely transferred to clients
- Revoked certificates are automatically added to the Certificate Revocation List (CRL)
- All certificate operations must be logged for audit purposes
